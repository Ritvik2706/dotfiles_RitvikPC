########################################
#            WINDOW RULES              #
########################################

# ================
########################################
#           WORKSPACE RULES            #
########################################    BLUR CONTROL
# =========================
# Ghostty terminal - disable blur for better text readability
windowrulev2 = noblur,class:^(com\.mitchellh\.ghostty)$
windowrulev2 = opacity 0.99 override 0.99 override,class:^(com\.mitchellh\.ghostty)$

# --- Global transparency template (disabled) ---
# Would force every window to ~89% opacity (both active & inactive),
# matching any class (.*). Keep commented unless you want global opacity.
# windowrulev2 = opacity 0.89 override 0.89 override, class:.*

# --- Disable blur for odd Xwayland popups/menus with empty class/title ---
# Matches windows whose class and title are empty strings (rare Xwayland menus).
# Using ^()$ is a regex trick that matches an empty string exactly.
windowrulev2 = noblur,class:^()$,title:^()$
# Alternative blanket Xwayland blur disable (commented out)
# windowrulev2 = noblur, xwayland:1


# =========================
#         FLOATING
# =========================
# Common file dialogs & pickers — force floating + center (and sometimes size)
windowrulev2 = center, title:^(Open File)(.*)$
windowrulev2 = float,  title:^(Open File)(.*)$
windowrulev2 = center, title:^(Select a File)(.*)$
windowrulev2 = float,  title:^(Select a File)(.*)$
windowrulev2 = center, title:^(Choose wallpaper)(.*)$
windowrulev2 = float,  title:^(Choose wallpaper)(.*)$
# 60% width x 65% height of the monitor for wallpaper chooser
windowrulev2 = size 60% 65%, title:^(Choose wallpaper)(.*)$
windowrulev2 = center, title:^(Open Folder)(.*)$
windowrulev2 = float,  title:^(Open Folder)(.*)$
windowrulev2 = center, title:^(Save As)(.*)$
windowrulev2 = float,  title:^(Save As)(.*)$
windowrulev2 = center, title:^(Library)(.*)$
windowrulev2 = float,  title:^(Library)(.*)$
windowrulev2 = center, title:^(File Upload)(.*)$
windowrulev2 = float,  title:^(File Upload)(.*)$

# Generic “wants to save/open” dialogs — float + center
windowrulev2 = center, title:^(.*)(wants to save)$
windowrulev2 = float,  title:^(.*)(wants to save)$
windowrulev2 = center, title:^(.*)(wants to open)$
windowrulev2 = float,  title:^(.*)(wants to open)$

# Blueberry (GTK Bluetooth manager) — float by class name
windowrulev2 = float, class:^(blueberry\.py)$

# FlafyDev/guifetch — float
windowrulev2 = float, class:^(guifetch)$

# PulseAudio Volume Control (two possible classes) — float, size, center
windowrulev2 = float, class:^(pavucontrol)$
windowrulev2 = size 45%, class:^(pavucontrol)$          # 45% x 45% of monitor
windowrulev2 = center, class:^(pavucontrol)$
windowrulev2 = float, class:^(org.pulseaudio.pavucontrol)$
windowrulev2 = size 45%, class:^(org.pulseaudio.pavucontrol)$
windowrulev2 = center, class:^(org.pulseaudio.pavucontrol)$

# Network Manager connection editor — float + size + center
windowrulev2 = float, class:^(nm-connection-editor)$
windowrulev2 = size 45%, class:^(nm-connection-editor)$
windowrulev2 = center, class:^(nm-connection-editor)$

# Various KDE helpers/embedded applets — keep floating
windowrulev2 = float, class:.*plasmawindowed.*
windowrulev2 = float, class:kcm_.*
windowrulev2 = float, class:.*bluedevilwizard

# Generic “Welcome” and conflict dialogs — float
windowrulev2 = float, title:.*Welcome
windowrulev2 = float, title:^(illogical-impulse Settings)$
windowrulev2 = float, title:.*Shell conflicts.*

# Flatpak/KDE portal dialogs — float + size
windowrulev2 = float, class:org.freedesktop.impl.portal.desktop.kde
windowrulev2 = size 60% 65%, class:org.freedesktop.impl.portal.desktop.kde

# Zotero — float and set to 45% x 45% size
windowrulev2 = float, class:^(Zotero)$
windowrulev2 = size 45%, class:^(Zotero)$


# =========================
#          MOVE
# =========================
# KDE “change icons” helper: float, don’t steal focus, shove it off-screen so it never bothers you
windowrulev2 = float,           class:^(plasma-changeicons)$
windowrulev2 = noinitialfocus,  class:^(plasma-changeicons)$
windowrulev2 = move 999999 999999, class:^(plasma-changeicons)$

#Thunar “Copying — thunar” progress window — place at a nice offset (x=40px,y=80px)
windowrulev2 = move 40 80, title:^(Copying — thunar)$

# ==== Yazi portal chooser (match by class/app-id) ====
windowrulev2 = float,  class:^yazi-picker$
windowrulev2 = center, class:^yazi-picker$
windowrulev2 = size 70% 70%, class:^yazi-picker$

# optional: catch the very first frame before the title settles
windowrulev2 = float,  initialtitle:^Yazi File Picker$
windowrulev2 = center, initialtitle:^Yazi File Picker$
windowrulev2 = size 70% 70%, initialtitle:^Yazi File Picker$


# =========================
#          TEARING
# =========================
# "immediate" reduces latency by presenting ASAP (can introduce tearing).
# Commonly used for games/Steam/Xwayland apps that prefer speed.
windowrulev2 = immediate, title:.*\.exe
windowrulev2 = immediate, title:.*minecraft.*
windowrulev2 = immediate, class:^(steam_app).*

# =========================
#          TILING
# =========================
# Force Warp (terminal) to tile (opt-out of floating defaults)
windowrulev2 = tile, class:^dev\.warp\.Warp$


# =========================
#    PICTURE-IN-PICTURE
# =========================
# Match typical PiP titles across apps. Keep small, float, keep aspect, pin on top, and place near bottom-right.
windowrulev2 = float,            title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
windowrulev2 = keepaspectratio,  title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
# Move uses percentages of monitor area: 73% right, 72% down (~bottom-right)
windowrulev2 = move 73% 72%,     title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
# Size 25% x 25% of monitor
windowrulev2 = size 25%,         title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
# (Duplicate float below would be redundant; kept for parity with your original)
windowrulev2 = float,            title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
# Keep always on top and sticky
windowrulev2 = pin,              title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$


# =========================
#          TEARING
# =========================
# “immediate” reduces latency by presenting ASAP (can introduce tearing).
# Commonly used for games/Steam/Xwayland apps that prefer speed.
windowrulev2 = immediate, title:.*\.exe
windowrulev2 = immediate, title:.*minecraft.*
windowrulev2 = immediate, class:^(steam_app).*


########################################
#           WORKSPACE RULES            #
########################################
# Special workspace “special”: add a big outer gap (nice for scratchpad overlays)
workspace = special:special, gapsout:30


########################################
#             LAYER RULES              #
########################################
# TL;DR for layer rules:
# - blur ................... enable background blur beneath that layer
# - ignorealpha X .......... treat layer pixels with alpha < X as fully transparent for blur occlusion
# - ignorezero ............. treat fully transparent pixels as not occluding blur
# - xray 1 ................. make the layer “transparent” to blur occlusion so blur from behind still shows
# - noanim ................. disable show/hide animations for that layer
# - animation <type> ....... choose how the layer appears (slide, fade, popin, etc.)

# Make *all* layers xray (blur from behind is visible even if this layer is on top).
# This can be pretty, but note it affects *every* layer. If something looks odd, try scoping it.
layerrule = xray 1, .*

# Disable animations for specific overlay layers that should be instant
layerrule = noanim, walker
layerrule = noanim, selection
layerrule = noanim, overview
layerrule = noanim, anyrun
layerrule = noanim, indicator.*
layerrule = noanim, osk             # on-screen keyboard
layerrule = noanim, hyprpicker      # color picker

# Redundant line (noanim matching “noanim” layer name); harmless if no such layer exists
layerrule = noanim, noanim

# Enable blur on all GTK layer-shell surfaces (Waybar, wlogout, etc.)
# If your Waybar background has some transparency, this makes the wallpaper blur behind it.
layerrule = blur, gtk-layer-shell
# Don’t let 0-alpha pixels block blur
layerrule = ignorezero, gtk-layer-shell

# App-specific/namespace tags used by launchers/bars in your setup
layerrule = blur, launcher
layerrule = ignorealpha 0.5, launcher         # if launcher is <50% opaque, treat as transparent for blur occlusion

layerrule = blur, notifications
layerrule = ignorealpha 0.69, notifications   # require >69% opacity to occlude blur (nice “frosted” notif look)

layerrule = blur, logout_dialog                # e.g., wlogout

# ===== ags (Aylur’s/ags surfaces) =====
layerrule = animation slide left,  sideleft.*     # slide in from left for left-side surfaces
layerrule = animation slide right, sideright.*    # slide in from right for right-side surfaces
layerrule = blur, session[0-9]*
layerrule = blur, bar[0-9]*                       # blur under ags bars
layerrule = ignorealpha 0.6, bar[0-9]*
layerrule = blur, barcorner.*
layerrule = ignorealpha 0.6, barcorner.*
layerrule = blur, dock[0-9]*
layerrule = ignorealpha 0.6, dock[0-9]*
layerrule = blur, indicator.*
layerrule = ignorealpha 0.6, indicator.*
layerrule = blur, overview[0-9]*
layerrule = ignorealpha 0.6, overview[0-9]*
layerrule = blur, cheatsheet[0-9]*
layerrule = ignorealpha 0.6, cheatsheet[0-9]*
layerrule = blur, sideright[0-9]*
layerrule = ignorealpha 0.6, sideright[0-9]*
layerrule = blur, sideleft[0-9]*
layerrule = ignorealpha 0.6, sideleft[0-9]*
# (indicator.* duplicated above; harmless)
layerrule = blur, indicator.*
layerrule = ignorealpha 0.6, indicator.*
layerrule = blur, osk[0-9]*
layerrule = ignorealpha 0.6, osk[0-9]*

# ===== Quickshell surfaces =====
# “blurpopups” = blur popups/tooltips belonging to this layer too (nice coherence)
layerrule = blurpopups, quickshell:.*
layerrule = blur,       quickshell:.*
layerrule = ignorealpha 0.79, quickshell:.*      # require ~80% opacity to actually occlude blur

# Animations per surface type
layerrule = animation slide,        quickshell:bar
layerrule = animation slide,        quickshell:verticalBar
layerrule = animation fade,         quickshell:screenCorners
layerrule = animation slide right,  quickshell:sidebarRight
layerrule = animation slide left,   quickshell:sidebarLeft
layerrule = animation slide bottom, quickshell:osk
layerrule = animation slide bottom, quickshell:dock
layerrule = blur,                   quickshell:session
layerrule = noanim,                 quickshell:session
layerrule = ignorealpha 0,          quickshell:session   # treat fully transparent as pass-through for blur
layerrule = animation fade,         quickshell:notificationPopup
layerrule = blur,                   quickshell:backgroundWidgets
layerrule = ignorealpha 0.05,       quickshell:backgroundWidgets
layerrule = noanim,                 quickshell:screenshot
layerrule = animation popin 120%,   quickshell:screenCorners
layerrule = noanim,                 quickshell:lockWindowPusher

# Launchers should feel instant
layerrule = noanim, quickshell:overview
layerrule = noanim, gtk4-layer-shell

# ===== Outfoxxed’s shell namespace =====
layerrule = blur,        shell:bar
layerrule = ignorezero,  shell:bar
layerrule = blur,        shell:notifications
layerrule = ignorealpha 0.1, shell:notifications


# =========================
#      CopyQ scratchpad
# =========================
# Float CopyQ, center it, and give it a fixed size (900x600 px).
# Classes cover multiple possible app-ids across builds/distros.
windowrulev2 = float, class:^(copyq|CopyQ|com\.github\.hluk\.copyq)$
windowrulev2 = center, class:^(copyq|CopyQ|com\.github\.hluk\.copyq)$
windowrulev2 = size 900 600, class:^(copyq|CopyQ|com\.github\.hluk\.copyq)$


# ===== Yazi FM popup (kitty wrapper) =====
# We'll launch kitty with --class yazi-fm so we can target it cleanly.
# Send it to its own special workspace ("yazi") and make it a tidy floating panel.

# land it on a dedicated special workspace
windowrulev2 = workspace special:yazi, class:^yazi-fm$

# float + center + nice size
windowrulev2 = float,  class:^yazi-fm$
windowrulev2 = center, class:^yazi-fm$
windowrulev2 = size 80% 75%, class:^yazi-fm$

# optional polish
windowrulev2 = stayfocused, class:^yazi-fm$       # keep focus when it appears
windowrulev2 = rounding 18, class:^yazi-fm$       # if you use rounded corners
windowrulev2 = opacity 0.97 override 0.97 override, class:^yazi-fm$  # subtle glass





